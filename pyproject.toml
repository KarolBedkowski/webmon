[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]


[tool.poetry]
authors = ["Karol BÄ™dkowski <karol.bedkowski@gmail.com>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
  "Programming Language :: Python :: 3 :: Only",
  "Environment :: Web Environment",
  "Framework :: Flask",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]
description = ""
include = ["ChangeLog"]
license = "GPL-2.0-or-later"
name = "webmon2"
readme = "README.rst"
version = "2.8.1"

[tool.poetry.dependencies]
Flask = "^2.0"
Flask-Minify = { version = "^0.32", optional = true }
PyQRCode = { version = "^1.2", optional = true }
PyYAML = ">3"
Werkzeug = "^2.0"
cssselect = "^1.1"
defusedxml = "^0.6"
feedparser = "^6.0"
gevent = "*"
"github3.py" = "^2.0"
html2text = "^2020.1.16"
lxml = "^4.3"
markdown2 = "^2.4"
prometheus-client = "^0.11"
psycopg2 = "^2.8"
pyotp = { version = "^2.6", optional = true }
python = "^3.9"
python-dateutil = "^2.8"
python-gitlab = "^2.10"
readability-lxml = "^0.8"
requests = "^2.21.0"
flask-babel = "*"
sdnotify = { version = "*", optional = true }

[tool.poetry.dev-dependencies]
pre-commit = "^2.15.0"
stackprinter = "*"

[tool.poetry.extras]
minify = ["Flask-Minify"]
otp = ["pyotp", "PyQRCode"]
sd = ["sdnotify"]

[tool.poetry.scripts]
webmon2 = "webmon2.main:main"


[tool.black]
line-length = 79


[tool.isort]
line_length = 79
multi_line_output = 3
profile = "black"
skip = "migrations"


[tool.bandit]
skips = ["B101", "B410", "B303", "B110", "B404", "B311", "B405", "B201"]


[tool.mypy]
python_version = 3.9
strict = true
exclude = [
  '_test\.py$'
]
allow_untyped_defs = true
allow_untyped_calls = true
ignore_missing_imports = true


[tool.flake8]
builtins = "_"


[tool.pylint.main]
ignore=["build", "dist", "tmp", "doc"]
jobs=4
extension-pkg-allow-list="lxml"
extension-pkg-whitelist="lxml"
py-version = [3, 9]
disable = ["missing-docstring", "format", "unused-argument"]

[tool.pylint.basic]
good-names=["i", "j", "k", "ex", "Run", "_", "db", "err", "ok", "x", "y", "id", "ts"]

#[tool.pylint.exceptions]
#overgeneral-exceptions = [""]

[tool.pylint.design]
#max-args = 8
max-attributes = 10

[tool.pylint.variables]
additional-builtins = ["_", "ngettext", "ic"]



[tool.ruff]
builtins = ["_", "ic", "ic_stack", "ngettext"]
